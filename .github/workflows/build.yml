name: build
on: ["push", "pull_request"]

jobs:
  ci:
    strategy:
      fail-fast: true
      matrix:
        python-version: [3.8]
        poetry-version: [1.1.13]
        os: [macos-latest]
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}
      - name: Install Poetry
        run: pip install poetry==${{ matrix.poetry-version }}
      - name: Install package and dependencies
        run: python3 -m poetry install
      - name: Lint code
        run: |
          python3 -m poetry run black . --check
          python3 -m poetry run isort . --check
          python3 -m poetry run flake8 .
      - name: Run unit tests
        run: python3 -m poetry run pytest -v --cov=torchtime --cov-report=xml
      - name: Build documentation
        run: |
          python3 -m poetry run make doctest html --directory docs/
          python3 -m poetry run genbadge coverage -v -i coverage.xml -o docs/_build/html/assets/coverage-badge.svg

  cd:
    needs: ci
    if: startsWith(github.ref, 'refs/tags/')
    runs-on: macos-latest
    env:
      python_version: 3.8
      poetry_version: 1.1.13
    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
      - name: Install Python
        uses: actions/setup-python@v2
        with:
          python-version: ${{ env.python_version }}
      - name: Install Poetry
        run: pip install poetry==${{ env.poetry_version }}
      - name: Install package and dependencies
        run: python3 -m poetry install
      - name: Get code coverage
        run: python3 -m poetry run pytest -v --cov=torchtime --cov-report=xml
      - name: Build documentation
        run: |
          python3 -m poetry run make doctest html --directory docs/
          python3 -m poetry run genbadge coverage -v -i coverage.xml -o docs/_build/html/assets/coverage-badge.svg
      - name: Update GitHub Pages
        uses: peaceiris/actions-gh-pages@v3.7.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: docs/_build/html
      - name: Create release
        uses: docker://antonyurchenko/git-release:latest
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CHANGELOG_FILE: "CHANGELOG.md"
          ALLOW_EMPTY_CHANGELOG: "false"
      - name: Build package
        run: python3 -m poetry build
      - name: Publish to PyPI
        uses: pypa/gh-action-pypi-publish@v1.5.0
        with:
          user: __token__
          password: ${{ secrets.PYPI_API_TOKEN }}